import asyncio


from aiogram import Bot, Dispatcher, Router, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.markdown import hbold
from aiogram import F
from aiogram.utils.formatting import (Bold, as_list, as_marked_section)
from token_data import TOKEN
from recipes_handler import router

dp = Dispatcher()
dp.include_router(router)

@dp.message(CommandStart())
async def command_start_heandler(message: Message):
    kb = [[types.KeyboardButton(text="–ö–æ–º–∞–Ω–¥—ã"),
           types.KeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞")]]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.full_name)}!\n'
                         f'–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏', reply_markup=keyboard)

@dp.message(F.text.lower() == '–æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞')
async def about(message: types.Message):
    await message.answer('–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –≤–∫—É—Å–Ω–æ–µ –±–ª—é–¥–æ!üçî')

@dp.message(F.text.lower() == '–∫–æ–º–∞–Ω–¥—ã')
async def command(message: types.Message):
    resource = as_list(as_marked_section(Bold("–ö–æ–º–∞–Ω–¥—ã:"), '–í–≤–µ–¥–∏—Ç–µ:\n/category_search_random *\n'
                                         '–≥–¥–µ "*" —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–æ–≤',marker='üßë‚Äçüç≥'))
    await message.answer(**resource.as_kwargs())


async def main():
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())